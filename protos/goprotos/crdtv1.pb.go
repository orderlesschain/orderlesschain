// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.12
// source: crdtv1.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TimeBase int32

const (
	TimeBase_ZERO TimeBase = 0
	TimeBase_BASE TimeBase = 10
)

// Enum value maps for TimeBase.
var (
	TimeBase_name = map[int32]string{
		0:  "ZERO",
		10: "BASE",
	}
	TimeBase_value = map[string]int32{
		"ZERO": 0,
		"BASE": 10,
	}
)

func (x TimeBase) Enum() *TimeBase {
	p := new(TimeBase)
	*p = x
	return p
}

func (x TimeBase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeBase) Descriptor() protoreflect.EnumDescriptor {
	return file_crdtv1_proto_enumTypes[0].Descriptor()
}

func (TimeBase) Type() protoreflect.EnumType {
	return &file_crdtv1_proto_enumTypes[0]
}

func (x TimeBase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeBase.Descriptor instead.
func (TimeBase) EnumDescriptor() ([]byte, []int) {
	return file_crdtv1_proto_rawDescGZIP(), []int{0}
}

type MutationType int32

const (
	MutationType_NOOP   MutationType = 0
	MutationType_INSERT MutationType = 1
	MutationType_DELETE MutationType = 2
	MutationType_ASSIGN MutationType = 3
)

// Enum value maps for MutationType.
var (
	MutationType_name = map[int32]string{
		0: "NOOP",
		1: "INSERT",
		2: "DELETE",
		3: "ASSIGN",
	}
	MutationType_value = map[string]int32{
		"NOOP":   0,
		"INSERT": 1,
		"DELETE": 2,
		"ASSIGN": 3,
	}
)

func (x MutationType) Enum() *MutationType {
	p := new(MutationType)
	*p = x
	return p
}

func (x MutationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MutationType) Descriptor() protoreflect.EnumDescriptor {
	return file_crdtv1_proto_enumTypes[1].Descriptor()
}

func (MutationType) Type() protoreflect.EnumType {
	return &file_crdtv1_proto_enumTypes[1]
}

func (x MutationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MutationType.Descriptor instead.
func (MutationType) EnumDescriptor() ([]byte, []int) {
	return file_crdtv1_proto_rawDescGZIP(), []int{1}
}

type CursorType int32

const (
	CursorType_NOTYPE CursorType = 0
	CursorType_MAP    CursorType = 1
	CursorType_LIST   CursorType = 2
	CursorType_REG    CursorType = 3
)

// Enum value maps for CursorType.
var (
	CursorType_name = map[int32]string{
		0: "NOTYPE",
		1: "MAP",
		2: "LIST",
		3: "REG",
	}
	CursorType_value = map[string]int32{
		"NOTYPE": 0,
		"MAP":    1,
		"LIST":   2,
		"REG":    3,
	}
)

func (x CursorType) Enum() *CursorType {
	p := new(CursorType)
	*p = x
	return p
}

func (x CursorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CursorType) Descriptor() protoreflect.EnumDescriptor {
	return file_crdtv1_proto_enumTypes[2].Descriptor()
}

func (CursorType) Type() protoreflect.EnumType {
	return &file_crdtv1_proto_enumTypes[2]
}

func (x CursorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CursorType.Descriptor instead.
func (CursorType) EnumDescriptor() ([]byte, []int) {
	return file_crdtv1_proto_rawDescGZIP(), []int{2}
}

type Clock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seed  int64 `protobuf:"varint,1,opt,name=seed,proto3" json:"seed,omitempty"`
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *Clock) Reset() {
	*x = Clock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crdtv1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Clock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Clock) ProtoMessage() {}

func (x *Clock) ProtoReflect() protoreflect.Message {
	mi := &file_crdtv1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Clock.ProtoReflect.Descriptor instead.
func (*Clock) Descriptor() ([]byte, []int) {
	return file_crdtv1_proto_rawDescGZIP(), []int{0}
}

func (x *Clock) GetSeed() int64 {
	if x != nil {
		return x.Seed
	}
	return 0
}

func (x *Clock) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       string    `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Deps     []string  `protobuf:"bytes,2,rep,name=deps,proto3" json:"deps,omitempty"`
	Cursor   *Cursor   `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Mutation *Mutation `protobuf:"bytes,4,opt,name=mutation,proto3" json:"mutation,omitempty"`
}

func (x *Operation) Reset() {
	*x = Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crdtv1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_crdtv1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_crdtv1_proto_rawDescGZIP(), []int{1}
}

func (x *Operation) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Operation) GetDeps() []string {
	if x != nil {
		return x.Deps
	}
	return nil
}

func (x *Operation) GetCursor() *Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *Operation) GetMutation() *Mutation {
	if x != nil {
		return x.Mutation
	}
	return nil
}

type Mutation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      MutationType `protobuf:"varint,1,opt,name=type,proto3,enum=protos.MutationType" json:"type,omitempty"`
	Key       string       `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	KeyInt    int32        `protobuf:"varint,3,opt,name=key_int,json=keyInt,proto3" json:"key_int,omitempty"`
	Value     string       `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	ValueNode *Node        `protobuf:"bytes,5,opt,name=value_node,json=valueNode,proto3" json:"value_node,omitempty"`
	IsList    bool         `protobuf:"varint,6,opt,name=is_list,json=isList,proto3" json:"is_list,omitempty"`
}

func (x *Mutation) Reset() {
	*x = Mutation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crdtv1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mutation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mutation) ProtoMessage() {}

func (x *Mutation) ProtoReflect() protoreflect.Message {
	mi := &file_crdtv1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mutation.ProtoReflect.Descriptor instead.
func (*Mutation) Descriptor() ([]byte, []int) {
	return file_crdtv1_proto_rawDescGZIP(), []int{2}
}

func (x *Mutation) GetType() MutationType {
	if x != nil {
		return x.Type
	}
	return MutationType_NOOP
}

func (x *Mutation) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Mutation) GetKeyInt() int32 {
	if x != nil {
		return x.KeyInt
	}
	return 0
}

func (x *Mutation) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Mutation) GetValueNode() *Node {
	if x != nil {
		return x.ValueNode
	}
	return nil
}

func (x *Mutation) GetIsList() bool {
	if x != nil {
		return x.IsList
	}
	return false
}

type Cursor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListPath []*ListKey `protobuf:"bytes,1,rep,name=list_path,json=listPath,proto3" json:"list_path,omitempty"`
	MapPath  []*MapKey  `protobuf:"bytes,2,rep,name=map_path,json=mapPath,proto3" json:"map_path,omitempty"`
	Key      string     `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	KeyInt   int32      `protobuf:"varint,4,opt,name=key_int,json=keyInt,proto3" json:"key_int,omitempty"`
}

func (x *Cursor) Reset() {
	*x = Cursor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crdtv1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cursor) ProtoMessage() {}

func (x *Cursor) ProtoReflect() protoreflect.Message {
	mi := &file_crdtv1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cursor.ProtoReflect.Descriptor instead.
func (*Cursor) Descriptor() ([]byte, []int) {
	return file_crdtv1_proto_rawDescGZIP(), []int{3}
}

func (x *Cursor) GetListPath() []*ListKey {
	if x != nil {
		return x.ListPath
	}
	return nil
}

func (x *Cursor) GetMapPath() []*MapKey {
	if x != nil {
		return x.MapPath
	}
	return nil
}

func (x *Cursor) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Cursor) GetKeyInt() int32 {
	if x != nil {
		return x.KeyInt
	}
	return 0
}

type ListKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key int64 `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ListKey) Reset() {
	*x = ListKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crdtv1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKey) ProtoMessage() {}

func (x *ListKey) ProtoReflect() protoreflect.Message {
	mi := &file_crdtv1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKey.ProtoReflect.Descriptor instead.
func (*ListKey) Descriptor() ([]byte, []int) {
	return file_crdtv1_proto_rawDescGZIP(), []int{4}
}

func (x *ListKey) GetKey() int64 {
	if x != nil {
		return x.Key
	}
	return 0
}

type MapKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *MapKey) Reset() {
	*x = MapKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crdtv1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapKey) ProtoMessage() {}

func (x *MapKey) ProtoReflect() protoreflect.Message {
	mi := &file_crdtv1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapKey.ProtoReflect.Descriptor instead.
func (*MapKey) Descriptor() ([]byte, []int) {
	return file_crdtv1_proto_rawDescGZIP(), []int{5}
}

func (x *MapKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deps       []string          `protobuf:"bytes,1,rep,name=deps,proto3" json:"deps,omitempty"`
	OpID       string            `protobuf:"bytes,2,opt,name=opID,proto3" json:"opID,omitempty"`
	Hmap       map[string]*Node  `protobuf:"bytes,3,rep,name=hmap,proto3" json:"hmap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	List       []*Node           `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`
	Reg        map[string]string `protobuf:"bytes,5,rep,name=reg,proto3" json:"reg,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ListLength int32             `protobuf:"varint,6,opt,name=list_length,json=listLength,proto3" json:"list_length,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crdtv1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_crdtv1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_crdtv1_proto_rawDescGZIP(), []int{6}
}

func (x *Node) GetDeps() []string {
	if x != nil {
		return x.Deps
	}
	return nil
}

func (x *Node) GetOpID() string {
	if x != nil {
		return x.OpID
	}
	return ""
}

func (x *Node) GetHmap() map[string]*Node {
	if x != nil {
		return x.Hmap
	}
	return nil
}

func (x *Node) GetList() []*Node {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *Node) GetReg() map[string]string {
	if x != nil {
		return x.Reg
	}
	return nil
}

func (x *Node) GetListLength() int32 {
	if x != nil {
		return x.ListLength
	}
	return 0
}

type Doc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string       `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Clocks          []*Clock     `protobuf:"bytes,2,rep,name=clocks,proto3" json:"clocks,omitempty"`
	Clock           *Clock       `protobuf:"bytes,6,opt,name=clock,proto3" json:"clock,omitempty"`
	OperationsId    []string     `protobuf:"bytes,3,rep,name=operations_id,json=operationsId,proto3" json:"operations_id,omitempty"`
	Head            *Node        `protobuf:"bytes,4,opt,name=head,proto3" json:"head,omitempty"`
	OperationBuffer []*Operation `protobuf:"bytes,5,rep,name=operation_buffer,json=operationBuffer,proto3" json:"operation_buffer,omitempty"`
}

func (x *Doc) Reset() {
	*x = Doc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crdtv1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Doc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Doc) ProtoMessage() {}

func (x *Doc) ProtoReflect() protoreflect.Message {
	mi := &file_crdtv1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Doc.ProtoReflect.Descriptor instead.
func (*Doc) Descriptor() ([]byte, []int) {
	return file_crdtv1_proto_rawDescGZIP(), []int{7}
}

func (x *Doc) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Doc) GetClocks() []*Clock {
	if x != nil {
		return x.Clocks
	}
	return nil
}

func (x *Doc) GetClock() *Clock {
	if x != nil {
		return x.Clock
	}
	return nil
}

func (x *Doc) GetOperationsId() []string {
	if x != nil {
		return x.OperationsId
	}
	return nil
}

func (x *Doc) GetHead() *Node {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *Doc) GetOperationBuffer() []*Operation {
	if x != nil {
		return x.OperationBuffer
	}
	return nil
}

type DocChanges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string       `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	ClockId    string       `protobuf:"bytes,1,opt,name=ClockId,proto3" json:"ClockId,omitempty"`
	Operations []*Operation `protobuf:"bytes,3,rep,name=operations,proto3" json:"operations,omitempty"`
}

func (x *DocChanges) Reset() {
	*x = DocChanges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crdtv1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocChanges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocChanges) ProtoMessage() {}

func (x *DocChanges) ProtoReflect() protoreflect.Message {
	mi := &file_crdtv1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocChanges.ProtoReflect.Descriptor instead.
func (*DocChanges) Descriptor() ([]byte, []int) {
	return file_crdtv1_proto_rawDescGZIP(), []int{8}
}

func (x *DocChanges) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DocChanges) GetClockId() string {
	if x != nil {
		return x.ClockId
	}
	return ""
}

func (x *DocChanges) GetOperations() []*Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

var File_crdtv1_proto protoreflect.FileDescriptor

var file_crdtv1_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x72, 0x64, 0x74, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x22, 0x31, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x65, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x09, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x70, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x08, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4d,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xbb, 0x01, 0x0a, 0x08, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6b, 0x65,
	0x79, 0x5f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6b, 0x65, 0x79,
	0x49, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x8c, 0x01, 0x0a, 0x06, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x09, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x08,
	0x6c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6b, 0x65, 0x79, 0x49, 0x6e, 0x74, 0x22, 0x1b,
	0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x1a, 0x0a, 0x06, 0x4d,
	0x61, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xc5, 0x02, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x65, 0x70, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x04, 0x68, 0x6d, 0x61, 0x70,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x48, 0x6d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04,
	0x68, 0x6d, 0x61, 0x70, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x03, 0x72, 0x65, 0x67, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x2e, 0x52, 0x65, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x72, 0x65, 0x67, 0x12,
	0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x1a, 0x45, 0x0a, 0x09, 0x48, 0x6d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x36, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xe6, 0x01, 0x0a, 0x03, 0x44, 0x6f, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x06, 0x63, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x23,
	0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x63, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x3c, 0x0a, 0x10, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x22, 0x69, 0x0a, 0x0a, 0x44, 0x6f, 0x63, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64,
	0x12, 0x31, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2a, 0x1e, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x61, 0x73, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x5a, 0x45, 0x52, 0x4f, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x41, 0x53,
	0x45, 0x10, 0x0a, 0x2a, 0x3c, 0x0a, 0x0c, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4f, 0x50, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x49, 0x4e, 0x53, 0x45, 0x52, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x10,
	0x03, 0x2a, 0x34, 0x0a, 0x0a, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4d,
	0x41, 0x50, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x02, 0x12, 0x07,
	0x0a, 0x03, 0x52, 0x45, 0x47, 0x10, 0x03, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x3b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_crdtv1_proto_rawDescOnce sync.Once
	file_crdtv1_proto_rawDescData = file_crdtv1_proto_rawDesc
)

func file_crdtv1_proto_rawDescGZIP() []byte {
	file_crdtv1_proto_rawDescOnce.Do(func() {
		file_crdtv1_proto_rawDescData = protoimpl.X.CompressGZIP(file_crdtv1_proto_rawDescData)
	})
	return file_crdtv1_proto_rawDescData
}

var file_crdtv1_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_crdtv1_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_crdtv1_proto_goTypes = []interface{}{
	(TimeBase)(0),      // 0: protos.TimeBase
	(MutationType)(0),  // 1: protos.MutationType
	(CursorType)(0),    // 2: protos.CursorType
	(*Clock)(nil),      // 3: protos.Clock
	(*Operation)(nil),  // 4: protos.Operation
	(*Mutation)(nil),   // 5: protos.Mutation
	(*Cursor)(nil),     // 6: protos.Cursor
	(*ListKey)(nil),    // 7: protos.ListKey
	(*MapKey)(nil),     // 8: protos.MapKey
	(*Node)(nil),       // 9: protos.Node
	(*Doc)(nil),        // 10: protos.Doc
	(*DocChanges)(nil), // 11: protos.DocChanges
	nil,                // 12: protos.Node.HmapEntry
	nil,                // 13: protos.Node.RegEntry
}
var file_crdtv1_proto_depIdxs = []int32{
	6,  // 0: protos.Operation.cursor:type_name -> protos.Cursor
	5,  // 1: protos.Operation.mutation:type_name -> protos.Mutation
	1,  // 2: protos.Mutation.type:type_name -> protos.MutationType
	9,  // 3: protos.Mutation.value_node:type_name -> protos.Node
	7,  // 4: protos.Cursor.list_path:type_name -> protos.ListKey
	8,  // 5: protos.Cursor.map_path:type_name -> protos.MapKey
	12, // 6: protos.Node.hmap:type_name -> protos.Node.HmapEntry
	9,  // 7: protos.Node.list:type_name -> protos.Node
	13, // 8: protos.Node.reg:type_name -> protos.Node.RegEntry
	3,  // 9: protos.Doc.clocks:type_name -> protos.Clock
	3,  // 10: protos.Doc.clock:type_name -> protos.Clock
	9,  // 11: protos.Doc.head:type_name -> protos.Node
	4,  // 12: protos.Doc.operation_buffer:type_name -> protos.Operation
	4,  // 13: protos.DocChanges.operations:type_name -> protos.Operation
	9,  // 14: protos.Node.HmapEntry.value:type_name -> protos.Node
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_crdtv1_proto_init() }
func file_crdtv1_proto_init() {
	if File_crdtv1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_crdtv1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Clock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crdtv1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crdtv1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mutation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crdtv1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cursor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crdtv1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crdtv1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crdtv1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crdtv1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Doc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crdtv1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocChanges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_crdtv1_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_crdtv1_proto_goTypes,
		DependencyIndexes: file_crdtv1_proto_depIdxs,
		EnumInfos:         file_crdtv1_proto_enumTypes,
		MessageInfos:      file_crdtv1_proto_msgTypes,
	}.Build()
	File_crdtv1_proto = out.File
	file_crdtv1_proto_rawDesc = nil
	file_crdtv1_proto_goTypes = nil
	file_crdtv1_proto_depIdxs = nil
}
