// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.12
// source: crdtv2.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CRDTOperation_ValueType int32

const (
	CRDTOperation_NOTYPECRDT         CRDTOperation_ValueType = 0
	CRDTOperation_MAP                CRDTOperation_ValueType = 1
	CRDTOperation_G_COUNTER          CRDTOperation_ValueType = 2
	CRDTOperation_MV_REGISTER        CRDTOperation_ValueType = 3
	CRDTOperation_MV_REGISTER_STRING CRDTOperation_ValueType = 5
)

// Enum value maps for CRDTOperation_ValueType.
var (
	CRDTOperation_ValueType_name = map[int32]string{
		0: "NOTYPECRDT",
		1: "MAP",
		2: "G_COUNTER",
		3: "MV_REGISTER",
		5: "MV_REGISTER_STRING",
	}
	CRDTOperation_ValueType_value = map[string]int32{
		"NOTYPECRDT":         0,
		"MAP":                1,
		"G_COUNTER":          2,
		"MV_REGISTER":        3,
		"MV_REGISTER_STRING": 5,
	}
)

func (x CRDTOperation_ValueType) Enum() *CRDTOperation_ValueType {
	p := new(CRDTOperation_ValueType)
	*p = x
	return p
}

func (x CRDTOperation_ValueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CRDTOperation_ValueType) Descriptor() protoreflect.EnumDescriptor {
	return file_crdtv2_proto_enumTypes[0].Descriptor()
}

func (CRDTOperation_ValueType) Type() protoreflect.EnumType {
	return &file_crdtv2_proto_enumTypes[0]
}

func (x CRDTOperation_ValueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CRDTOperation_ValueType.Descriptor instead.
func (CRDTOperation_ValueType) EnumDescriptor() ([]byte, []int) {
	return file_crdtv2_proto_rawDescGZIP(), []int{4, 0}
}

type CRDTObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrdtObjectId string          `protobuf:"bytes,1,opt,name=crdt_object_id,json=crdtObjectId,proto3" json:"crdt_object_id,omitempty"`
	Head         *CRDTObjectNode `protobuf:"bytes,4,opt,name=head,proto3" json:"head,omitempty"`
}

func (x *CRDTObject) Reset() {
	*x = CRDTObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crdtv2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CRDTObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRDTObject) ProtoMessage() {}

func (x *CRDTObject) ProtoReflect() protoreflect.Message {
	mi := &file_crdtv2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRDTObject.ProtoReflect.Descriptor instead.
func (*CRDTObject) Descriptor() ([]byte, []int) {
	return file_crdtv2_proto_rawDescGZIP(), []int{0}
}

func (x *CRDTObject) GetCrdtObjectId() string {
	if x != nil {
		return x.CrdtObjectId
	}
	return ""
}

func (x *CRDTObject) GetHead() *CRDTObjectNode {
	if x != nil {
		return x.Head
	}
	return nil
}

type CRDTClock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seed  int64 `protobuf:"varint,1,opt,name=seed,proto3" json:"seed,omitempty"`
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CRDTClock) Reset() {
	*x = CRDTClock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crdtv2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CRDTClock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRDTClock) ProtoMessage() {}

func (x *CRDTClock) ProtoReflect() protoreflect.Message {
	mi := &file_crdtv2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRDTClock.ProtoReflect.Descriptor instead.
func (*CRDTClock) Descriptor() ([]byte, []int) {
	return file_crdtv2_proto_rawDescGZIP(), []int{1}
}

func (x *CRDTClock) GetSeed() int64 {
	if x != nil {
		return x.Seed
	}
	return 0
}

func (x *CRDTClock) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CRDTObjectNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Map            map[string]*CRDTObjectNode `protobuf:"bytes,1,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	GCounter       *GCounter                  `protobuf:"bytes,4,opt,name=g_counter,json=gCounter,proto3" json:"g_counter,omitempty"`
	MvRegister     *MVRegister                `protobuf:"bytes,5,opt,name=mv_register,json=mvRegister,proto3" json:"mv_register,omitempty"`
	LastOperations []*CRDTClock               `protobuf:"bytes,7,rep,name=last_operations,json=lastOperations,proto3" json:"last_operations,omitempty"`
	MapValue       string                     `protobuf:"bytes,8,opt,name=map_value,json=mapValue,proto3" json:"map_value,omitempty"`
}

func (x *CRDTObjectNode) Reset() {
	*x = CRDTObjectNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crdtv2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CRDTObjectNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRDTObjectNode) ProtoMessage() {}

func (x *CRDTObjectNode) ProtoReflect() protoreflect.Message {
	mi := &file_crdtv2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRDTObjectNode.ProtoReflect.Descriptor instead.
func (*CRDTObjectNode) Descriptor() ([]byte, []int) {
	return file_crdtv2_proto_rawDescGZIP(), []int{2}
}

func (x *CRDTObjectNode) GetMap() map[string]*CRDTObjectNode {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *CRDTObjectNode) GetGCounter() *GCounter {
	if x != nil {
		return x.GCounter
	}
	return nil
}

func (x *CRDTObjectNode) GetMvRegister() *MVRegister {
	if x != nil {
		return x.MvRegister
	}
	return nil
}

func (x *CRDTObjectNode) GetLastOperations() []*CRDTClock {
	if x != nil {
		return x.LastOperations
	}
	return nil
}

func (x *CRDTObjectNode) GetMapValue() string {
	if x != nil {
		return x.MapValue
	}
	return ""
}

type CRDTOperationsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrdtObjectId string           `protobuf:"bytes,1,opt,name=crdt_object_id,json=crdtObjectId,proto3" json:"crdt_object_id,omitempty"`
	Operations   []*CRDTOperation `protobuf:"bytes,2,rep,name=operations,proto3" json:"operations,omitempty"`
}

func (x *CRDTOperationsList) Reset() {
	*x = CRDTOperationsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crdtv2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CRDTOperationsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRDTOperationsList) ProtoMessage() {}

func (x *CRDTOperationsList) ProtoReflect() protoreflect.Message {
	mi := &file_crdtv2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRDTOperationsList.ProtoReflect.Descriptor instead.
func (*CRDTOperationsList) Descriptor() ([]byte, []int) {
	return file_crdtv2_proto_rawDescGZIP(), []int{3}
}

func (x *CRDTOperationsList) GetCrdtObjectId() string {
	if x != nil {
		return x.CrdtObjectId
	}
	return ""
}

func (x *CRDTOperationsList) GetOperations() []*CRDTOperation {
	if x != nil {
		return x.Operations
	}
	return nil
}

type CRDTOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationId   string                  `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	OperationPath []string                `protobuf:"bytes,2,rep,name=operation_path,json=operationPath,proto3" json:"operation_path,omitempty"`
	Key           string                  `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`
	ValueType     CRDTOperation_ValueType `protobuf:"varint,6,opt,name=value_type,json=valueType,proto3,enum=protos.CRDTOperation_ValueType" json:"value_type,omitempty"`
	Value         string                  `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	Clock         string                  `protobuf:"bytes,9,opt,name=clock,proto3" json:"clock,omitempty"`
}

func (x *CRDTOperation) Reset() {
	*x = CRDTOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crdtv2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CRDTOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRDTOperation) ProtoMessage() {}

func (x *CRDTOperation) ProtoReflect() protoreflect.Message {
	mi := &file_crdtv2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRDTOperation.ProtoReflect.Descriptor instead.
func (*CRDTOperation) Descriptor() ([]byte, []int) {
	return file_crdtv2_proto_rawDescGZIP(), []int{4}
}

func (x *CRDTOperation) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *CRDTOperation) GetOperationPath() []string {
	if x != nil {
		return x.OperationPath
	}
	return nil
}

func (x *CRDTOperation) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CRDTOperation) GetValueType() CRDTOperation_ValueType {
	if x != nil {
		return x.ValueType
	}
	return CRDTOperation_NOTYPECRDT
}

func (x *CRDTOperation) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CRDTOperation) GetClock() string {
	if x != nil {
		return x.Clock
	}
	return ""
}

type GCounter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CounterValue int32 `protobuf:"varint,1,opt,name=counterValue,proto3" json:"counterValue,omitempty"`
}

func (x *GCounter) Reset() {
	*x = GCounter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crdtv2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCounter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCounter) ProtoMessage() {}

func (x *GCounter) ProtoReflect() protoreflect.Message {
	mi := &file_crdtv2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCounter.ProtoReflect.Descriptor instead.
func (*GCounter) Descriptor() ([]byte, []int) {
	return file_crdtv2_proto_rawDescGZIP(), []int{5}
}

func (x *GCounter) GetCounterValue() int32 {
	if x != nil {
		return x.CounterValue
	}
	return 0
}

type MVRegister struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegisterValue       []bool   `protobuf:"varint,1,rep,packed,name=register_value,json=registerValue,proto3" json:"register_value,omitempty"`
	RegisterValueString []string `protobuf:"bytes,2,rep,name=register_value_string,json=registerValueString,proto3" json:"register_value_string,omitempty"`
}

func (x *MVRegister) Reset() {
	*x = MVRegister{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crdtv2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MVRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MVRegister) ProtoMessage() {}

func (x *MVRegister) ProtoReflect() protoreflect.Message {
	mi := &file_crdtv2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MVRegister.ProtoReflect.Descriptor instead.
func (*MVRegister) Descriptor() ([]byte, []int) {
	return file_crdtv2_proto_rawDescGZIP(), []int{6}
}

func (x *MVRegister) GetRegisterValue() []bool {
	if x != nil {
		return x.RegisterValue
	}
	return nil
}

func (x *MVRegister) GetRegisterValueString() []string {
	if x != nil {
		return x.RegisterValueString
	}
	return nil
}

var File_crdtv2_proto protoreflect.FileDescriptor

var file_crdtv2_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x72, 0x64, 0x74, 0x76, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x22, 0x5e, 0x0a, 0x0a, 0x43, 0x52, 0x44, 0x54, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x72, 0x64, 0x74, 0x5f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72,
	0x64, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x68, 0x65,
	0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x43, 0x52, 0x44, 0x54, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x22, 0x35, 0x0a, 0x09, 0x43, 0x52, 0x44, 0x54, 0x43, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd0, 0x02,
	0x0a, 0x0e, 0x43, 0x52, 0x44, 0x54, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x12, 0x31, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x52, 0x44, 0x54, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03,
	0x6d, 0x61, 0x70, 0x12, 0x2d, 0x0a, 0x09, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x47, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x08, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x12, 0x33, 0x0a, 0x0b, 0x6d, 0x76, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x4d, 0x56, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x6d, 0x76, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x52, 0x44, 0x54, 0x43, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x4e, 0x0a, 0x08, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x52, 0x44, 0x54, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x71, 0x0a, 0x12, 0x43, 0x52, 0x44, 0x54, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x72, 0x64, 0x74, 0x5f, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x72, 0x64, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x52, 0x44, 0x54, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0xb5, 0x02, 0x0a, 0x0d, 0x43, 0x52, 0x44, 0x54, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x3e, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43,
	0x52, 0x44, 0x54, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x5c, 0x0a,
	0x09, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x4f,
	0x54, 0x59, 0x50, 0x45, 0x43, 0x52, 0x44, 0x54, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x41,
	0x50, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52,
	0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x56, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45,
	0x52, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x56, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54,
	0x45, 0x52, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x22, 0x2e, 0x0a, 0x08, 0x47,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x67, 0x0a, 0x0a, 0x4d,
	0x56, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x08, 0x52, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_crdtv2_proto_rawDescOnce sync.Once
	file_crdtv2_proto_rawDescData = file_crdtv2_proto_rawDesc
)

func file_crdtv2_proto_rawDescGZIP() []byte {
	file_crdtv2_proto_rawDescOnce.Do(func() {
		file_crdtv2_proto_rawDescData = protoimpl.X.CompressGZIP(file_crdtv2_proto_rawDescData)
	})
	return file_crdtv2_proto_rawDescData
}

var file_crdtv2_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_crdtv2_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_crdtv2_proto_goTypes = []interface{}{
	(CRDTOperation_ValueType)(0), // 0: protos.CRDTOperation.ValueType
	(*CRDTObject)(nil),           // 1: protos.CRDTObject
	(*CRDTClock)(nil),            // 2: protos.CRDTClock
	(*CRDTObjectNode)(nil),       // 3: protos.CRDTObjectNode
	(*CRDTOperationsList)(nil),   // 4: protos.CRDTOperationsList
	(*CRDTOperation)(nil),        // 5: protos.CRDTOperation
	(*GCounter)(nil),             // 6: protos.GCounter
	(*MVRegister)(nil),           // 7: protos.MVRegister
	nil,                          // 8: protos.CRDTObjectNode.MapEntry
}
var file_crdtv2_proto_depIdxs = []int32{
	3, // 0: protos.CRDTObject.head:type_name -> protos.CRDTObjectNode
	8, // 1: protos.CRDTObjectNode.map:type_name -> protos.CRDTObjectNode.MapEntry
	6, // 2: protos.CRDTObjectNode.g_counter:type_name -> protos.GCounter
	7, // 3: protos.CRDTObjectNode.mv_register:type_name -> protos.MVRegister
	2, // 4: protos.CRDTObjectNode.last_operations:type_name -> protos.CRDTClock
	5, // 5: protos.CRDTOperationsList.operations:type_name -> protos.CRDTOperation
	0, // 6: protos.CRDTOperation.value_type:type_name -> protos.CRDTOperation.ValueType
	3, // 7: protos.CRDTObjectNode.MapEntry.value:type_name -> protos.CRDTObjectNode
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_crdtv2_proto_init() }
func file_crdtv2_proto_init() {
	if File_crdtv2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_crdtv2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CRDTObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crdtv2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CRDTClock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crdtv2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CRDTObjectNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crdtv2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CRDTOperationsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crdtv2_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CRDTOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crdtv2_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCounter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crdtv2_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MVRegister); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_crdtv2_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_crdtv2_proto_goTypes,
		DependencyIndexes: file_crdtv2_proto_depIdxs,
		EnumInfos:         file_crdtv2_proto_enumTypes,
		MessageInfos:      file_crdtv2_proto_msgTypes,
	}.Build()
	File_crdtv2_proto = out.File
	file_crdtv2_proto_rawDesc = nil
	file_crdtv2_proto_goTypes = nil
	file_crdtv2_proto_depIdxs = nil
}
